// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id              String     @id  // Soundtrack Account ID
  name            String
  apiToken        String?    // Optional: store client's own API token
  isActive        Boolean    @default(true)
  subscriptionPlan String?   // basic, pro, enterprise
  schedules       Schedule[]
  users           User[]     // Users who can access this account
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
}

model Schedule {
  id              String    @id @default(cuid())
  accountId       String
  account         Account   @relation(fields: [accountId], references: [id])
  soundZoneId     String
  zoneName        String
  rules           Json      // Store rules as JSON
  timeZone        String
  baselineVolume  Int       @default(8)
  isActive        Boolean   @default(true)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  @@unique([soundZoneId])
}

model Session {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  token     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())
  
  @@index([token])
  @@index([userId])
}

model User {
  id          String    @id @default(cuid())
  email       String    @unique
  password    String    // Hashed password
  name        String?
  role        String    @default("client") // admin, client
  accountId   String?   // For client users only
  account     Account?  @relation(fields: [accountId], references: [id])
  isActive    Boolean   @default(true)
  lastLogin   DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  
  sessions    Session[]
}